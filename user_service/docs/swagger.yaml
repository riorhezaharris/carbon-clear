basePath: /
definitions:
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  models.UpdateUserRequest:
    properties:
      name:
        type: string
      role:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@carbonclear.com
    name: API Support
  description: This is the User Service API for Carbon Clear application
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: User Service API
  version: "1.0"
paths:
  /admin/users:
    get:
      consumes:
      - application/json
      description: Retrieve all users (admin only)
      produces:
      - application/json
      responses:
        "200":
          description: Users fetched successfully
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to get users
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - AdminAuth: []
      summary: Get all users
      tags:
      - admin
  /admin/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid ID
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to delete user
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - AdminAuth: []
      summary: Delete user
      tags:
      - admin
    get:
      consumes:
      - application/json
      description: Retrieve a specific user by ID (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User fetched successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid ID
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to get user
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - AdminAuth: []
      summary: Get user by ID
      tags:
      - admin
    put:
      consumes:
      - application/json
      description: Update a user's information (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid ID or request body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to update user
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - AdminAuth: []
      summary: Update user
      tags:
      - admin
  /admin/users/login:
    post:
      consumes:
      - application/json
      description: Authenticate admin and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful with token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid credentials or role
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to get user or sign token
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login admin
      tags:
      - admin
  /admin/users/register:
    post:
      consumes:
      - application/json
      description: Register a new admin account
      parameters:
      - description: Admin registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Admin registered successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to create admin
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new admin
      tags:
      - admin
  /api/users/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful with token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid credentials or role
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to get user or sign token
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - users
  /api/users/profile:
    get:
      consumes:
      - application/json
      description: Get the current user's profile
      produces:
      - application/json
      responses:
        "200":
          description: Profile fetched successfully
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to get user profile
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - UserAuth: []
      summary: Get user profile
      tags:
      - users
  /api/users/register:
    post:
      consumes:
      - application/json
      description: Register a new user account
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to create user
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - users
securityDefinitions:
  AdminAuth:
    description: 'Admin JWT token (format: Bearer <token>)'
    in: header
    name: Authorization
    type: apiKey
  UserAuth:
    description: 'User JWT token (format: Bearer <token>)'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
